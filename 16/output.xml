<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20140406 15:05:53.829" generator="Robot 2.8.4 (Python 2.7.3 on linux2)">
<suite source="/home/travis/build/blue119/robot-travis/RobotDemo/keyword_driven.txt" id="s1" name="Keyword Driven">
<test id="s1-t1" name="Push button">
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.867" starttime="20140406 15:05:53.866"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Result Should Be">
<doc>Verifies that the current result is `expected`.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.867" starttime="20140406 15:05:53.867"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140406 15:05:53.867" critical="yes" starttime="20140406 15:05:53.866"></status>
</test>
<test id="s1-t2" name="Push multiple buttons">
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.868" starttime="20140406 15:05:53.868"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.869" starttime="20140406 15:05:53.869"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Result Should Be">
<doc>Verifies that the current result is `expected`.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.869" starttime="20140406 15:05:53.869"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140406 15:05:53.869" critical="yes" starttime="20140406 15:05:53.868"></status>
</test>
<test id="s1-t3" name="Simple calculation">
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.871" starttime="20140406 15:05:53.870"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>+</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.871" starttime="20140406 15:05:53.871"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.871" starttime="20140406 15:05:53.871"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>=</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.872" starttime="20140406 15:05:53.871"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Result Should Be">
<doc>Verifies that the current result is `expected`.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.872" starttime="20140406 15:05:53.872"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140406 15:05:53.872" critical="yes" starttime="20140406 15:05:53.870"></status>
</test>
<test id="s1-t4" name="Longer calculation">
<kw type="kw" name="CalculatorLibrary.Push Buttons">
<doc>Pushes the specified `buttons`.</doc>
<arguments>
<arg>5 + 4 - 3 * 2 / 1 =</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.874" starttime="20140406 15:05:53.873"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Result Should Be">
<doc>Verifies that the current result is `expected`.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.874" starttime="20140406 15:05:53.874"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140406 15:05:53.874" critical="yes" starttime="20140406 15:05:53.873"></status>
</test>
<test id="s1-t5" name="Clear">
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.875" starttime="20140406 15:05:53.875"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Push Button">
<doc>Pushes the specified `button`.</doc>
<arguments>
<arg>C</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.876" starttime="20140406 15:05:53.875"></status>
</kw>
<kw type="kw" name="CalculatorLibrary.Result Should Be">
<doc>Verifies that the current result is `expected`.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20140406 15:05:53.876" starttime="20140406 15:05:53.876"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20140406 15:05:53.876" critical="yes" starttime="20140406 15:05:53.874"></status>
</test>
<doc>Example test cases using the keyword-driven testing approach.

All tests contain a workflow constructed from keywords in
`CalculatorLibrary`. Creating new tests or editing existing
is easy even for people without programming skills.

This kind of style works well for normal test automation.
If also business people need to understand tests, using
_gherkin_ style may work better.</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20140406 15:05:53.877" starttime="20140406 15:05:53.829"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" pass="5" id="s1" name="Keyword Driven">Keyword Driven</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
